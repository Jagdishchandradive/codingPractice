//Method overriding:-
//Overriding is typically used in situations where you want to customize
//or extend the behavior of a superclass method in a subclass.
class Animal{
    public void sound(){
        System.out.println("Animal Sound");
    }
    }
class Dog extends Animal{
    @Override
    public void sound(){
        System.out.println("Dog Barks");
    }
}
public class Main {
    public static void main(String[] args) {
     // Create an instance of Dog
        Dog myDog = new Dog();

     // Call the sound() method of Dog
        myDog.sound(); // Output: Dog barks

  // Assign the Dog object to Animal reference
        Animal myAnimal = myDog;
  // Call the sound() method using Animal reference
        myAnimal.sound(); // Output: Dog barks
    }
}